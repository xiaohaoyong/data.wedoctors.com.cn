<?php
namespace app\components\widgets;

use Yii;
use yii\base\InvalidValueException;
use yii\bootstrap\Modal;

class ModalWidget extends Modal
{
    const FOOTER_CONTENT_BUTTON2 = '<button type="button" class="btn btn-default" data-dismiss="modal">关闭</button><button type="button" class="btn btn-primary fromButton">提交</button>';
    const HEADER_CONTENT_PROMPT = "提示：";
    public $footer = self::FOOTER_CONTENT_BUTTON2;
    public $header = self::HEADER_CONTENT_PROMPT;
    public $xywy_attr;

    public function init()
    {
        if (isset($xywy_attr) && !is_array($this->xywy_attr)) {
            throw new InvalidValueException("xywy_attr 必须是数组");
        }
        parent::init();
    }

    public function run()
    {
        $modal = $this->id . "modal";
        $js[] = "var $modal =jQuery('#$this->id');\n";
        if ($this->xywy_attr) {
            $js[] = "var xywy_value ={}";
            $jsval = "$modal.on('show.bs.modal', function(e){\n";
            foreach ($this->xywy_attr as $k => $v) {
                $jsval .= "   xywy_value.$v=jQuery(e.relatedTarget).attr('xywy_" . $v . "');\n";
            }
            $jsval .= "});\n";
            $js[] = $jsval;
        }
        $jsform = "
	jQuery('.fromButton').on('click',function(e){
		 $modal.find('form').each(function(){
		 		 	var FormS=jQuery(this);

		 ";
        if ($this->xywy_attr) {
            foreach ($this->xywy_attr as $k => $v) {

                $jsform .= "if($modal.find('[name=$v]').length>0 && $modal.find('[name=$v]').length)
                    {
                        FormS.find('[name=$v]').val(xywy_value.$v);
                    }else{
                        FormS.append('<input type=\"hidden\" name=\"$v\" value=\"'+xywy_value.$v+'\">');
                    }";
            }
        }
        $jsform .= "
		 	FormS.on('submit',function(e){
		 	Metronic.blockUI({
                target: '.modal-content',
                overlayColor: 'none',
                cenrerY: true,
                animate: true
            });
		 	 e.preventDefault();
			 $.ajax({
				type: \"POST\",
				dataType:'json',
				url:FormS.attr('action'),
				data:FormS.serialize(),// 你的formid
				async: false,
				error: function(request) {
                    $modal.modal('hide');
                    alert(\"网络请求失败！\");
                    Metronic.unblockUI('.modal-content');
				},
				success: function(data) {
					if(data.code){
						$modal.modal('hide');
                        alert(data.msg);
                        Metronic.unblockUI('.modal-content');
						FormS[0].reset();
						location.reload(true);
					}
				}
			});
		    })


			var data = FormS.data('yiiActiveForm');
			if(data){
                data.submitting=true;
                FormS.data('yiiActiveForm',data)
                FormS.yiiActiveForm('validate');
			}else{
                FormS.submit();
			}




		});
	})


        \n";
        $js[] = $jsform;

        $this->getView()->registerJs(implode("\n", $js));

        parent::run(); // TODO: Change the autogenerated stub
    }
}

?>