<?php

namespace app\models\article;

use app\models\dynamic\Dynamic;
use Yii;

/**
 * This is the model class for table "info_article".
 *
 * @property integer $id
 * @property string $title
 * @property string $content
 * @property string $author
 * @property string $source
 * @property integer $praiseNum
 * @property integer $createtime
 * @property integer $catid
 * @property integer $dept
 * @property string $image
 * @property integer $catpid
 * @property integer $level
 * @property integer $mediaid
 * @property string $vector
 * @property integer $timing
 * @property integer $top
 * @property integer $style
 * @property integer $model
 * @property integer $dynamicid
 */
class InfoArticle extends \yii\db\ActiveRecord
{
    public $urls;
    public static $modelText=[0=>'普通资讯',1=>'多图文',3=>'站外链接',4=>'视频源链接'];
    public static $styleText=[0=>"无",
        1=>'资讯',2=>'专题',3=>'视频',4=>'活动',5=>'独家',6=>'病例',7=>'访谈',8=>'考试',9=>'科研',
        10=>'手术',11=>'药品',12=>'用药',13=>'政策',14=>'指南',15=>'推广',16=>'会议'
    ];
    public static $topText=[
        0=>'否',1=>'是'
    ];
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'info_article';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('dbzx');
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title'], 'required'],
            [['content'], 'string'],
            [['ftitle'], 'string'],
            [['praiseNum', 'createtime', 'catid', 'dept', 'catpid', 'level', 'mediaid', 'timing', 'top', 'style', 'model'], 'integer'],
            [['title'], 'string', 'max' => 50],
            [['author', 'source'], 'string', 'max' => 10],
            [['image'], 'string', 'max' => 150],
            [['vector'], 'string', 'max' => 250],
            ['catid', 'default', 'value' => 0],
            ['urls', 'default', 'value' => '']

        ];
    }

    public function fields()
    {
        $fields= parent::fields(); // TODO: Change the autogenerated stub

        return $fields+['urls'];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => '标题',
            'ftitle' => '标题',
            'content' => '内容',
            'author' => '作者',
            'source' => '来源',
            'praiseNum' => '点赞数',
            'createtime' => '创建时间',
            'catid' => '子频道',
            'dept' => 'Dept',
            'image' => '封面',
            'catpid' => '主频道',
            'level' => '数据状态',
            'mediaid' => '媒体号id',
            'vector' => '文章导读',
            'timing' => '定时发布时间',
            'top' => '置顶',
            'style' => '文章类型',
            'model' => '文章类别',
            'urls' => '源生视频、站外链接',
            'dynamicid'=>'关联动态ID',
        ];
    }
    public function beforeSave($insert)
    {
        if(!$this->dynamicid){
            $dynamic = new Dynamic();
            $dynamic->userid=$this->mediaid;
            $dynamic->createtime = time();
            $dynamic->type = 1;
            $dynamic->source = 7;
            $dynamic->save();
            $this->dynamicid=$dynamic->id;
        }
        if($insert)
        {
            $this->createtime=time();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function afterDelete()
    {
        parent::afterDelete(); // TODO: Change the autogenerated stub
        $dynamic=Dynamic::findOne($this->dynamicid);
        if($dynamic)
        {
            $dynamic->delete();
        }
    }
}
