<?php

namespace app\models;

use app\components\behavior\UserBehavior;
use app\components\helper\HuanxinHelper;
use app\components\helper\HuanxinUserHelper;
use Yii;

/**
 * This is the model class for table "user".
 *
 * @property integer $id
 * @property integer $level
 * @property integer $type
 * @property integer $createtime
 * @property integer $state
 */
class Users extends UserDb
{
    public static $levelText=[2=>'已审核',1=>'审核中',0=>'未审核',-1=>'审核未通过'];
    public static $typeText=[
        0=>[0=>'普通医生',1=>'基层医生',2=>'基层专家',3=>'社区医生',4=>'专家'],
        1=>[1=>'拉手学院',2=>'轻应用',3=>'媒体号']
    ];
    public static $stateText=[0=>'医生账号',1=>'公众号'];
    public function behaviors()
    {
        $behaviors["user_info"]= [
            'class'=>UserBehavior::className(),
        ];
        return $behaviors;

    }

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user';
    }
    public function getInfo()
    {
        return $this->hasOne(UserInfo::className(),['userid' => 'id']);
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['level', 'type', 'createtime', 'state'], 'integer'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => '用户ID',
            'level' => '账号状态',
            'type' => '用户类型',
            'createtime' => '注册时间',
        ];
    }

    public function beforeSave($insert)
    {
        if($insert)
        {
            $this->createtime=time();
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    public function afterSave($insert, $changedAttributes)
    {
        if($changedAttributes['level']!=$this->level && $this->level==-1)
        {
            switch ($this->level)
            {
                case -1:
                    $msg="认证审核未通过，请重新修改提交审核!";
                    break;
                case 2:
                    $msg="您提交认证信息已审核通过。";
                    break;
            }
            $ext = array(
                'fromRealName' => "我的助理",
                'fromAvatar' => "http://static.i.wedoctors.com.cn/upload/89e9f5155fe3fb.png",
                'toRealName' => "我",
                'toAvatar' => "http://static.i.wedoctors.com.cn/upload/89e9f5155fe3fb.png",
                'newMsgType' => 'audit_status',
            );
            $return=HuanxinHelper::setTxtMessage('doctor_assistant',"did_".$this->id,$msg,$ext);
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    public function beforeDelete()
    {

        $userinfo=UserInfo::findOne($this->id);
        if ($userinfo)
        {
            $userinfo->delete();
        }
        $userLogin=UserLogin::findOne($this->id);
        if ($userLogin)
        {
            $userLogin->delete();
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }
}
